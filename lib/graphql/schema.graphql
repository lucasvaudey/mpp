type LegumeConst implements ConstElement {
  id: ID!
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!

  """
  Short description of the constants
  """
  description: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  sickness: [Sickness!]
  varieties: [Variety!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [month!]

  """
  Give an array of months
  """
  recolteMonth: [month!]

  """
  Give an array of months
  """
  semisMonth: [month!]

  """
  Description of the soil needed
  """
  soilDesc: String!

  """
  Description of the culture & entretien needed
  """
  cultureDesc: String!

  """
  Description of the culture & entretien needed
  """
  recolteDesc: String!
  friends: [LegumeConst!]
}

interface ConstElement {
  id: ID!
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!

  """
  Short description of the constants
  """
  description: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  sickness: [Sickness!]
  varieties: [Variety!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [month!]

  """
  Give an array of months
  """
  recolteMonth: [month!]

  """
  Give an array of months
  """
  semisMonth: [month!]
}

"""
The URL scalar type represents URL addresses.
"""
scalar URL

type Sickness {
  id: ID!
  label: String!
  description: String!
  constants: [ConstElement!]
}

type Variety {
  id: ID!
  image: URL!
  label: String!
  description: String!
  constant: ConstElement!
}

"""
Exposition type
"""
enum exposition {
  SOLEIL
  OMBRE
  MI_OMBRE
}

"""
Months of the year
"""
enum month {
  JANVIER
  FEVRIER
  MARS
  AVRIL
  MAI
  JUIN
  JUILLET
  AOUT
  SEPTEMBRE
  OCTOBRE
  NOVEMBRE
  DECEMBRE
}

type ArbreConst implements ConstElement {
  id: ID!
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!

  """
  Short description of the constants
  """
  description: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  sickness: [Sickness!]
  varieties: [Variety!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [month!]

  """
  Give an array of months
  """
  recolteMonth: [month!]

  """
  Give an array of months
  """
  semisMonth: [month!]

  """
  Description of the climat needed
  """
  climatDesc: String!

  """
  Description of the culture & entretien needed
  """
  tailleDesc: String!

  """
  Description of the culture & entretien needed
  """
  recolteDesc: String!

  """
  Give an array of months
  """
  tailleMonth: [Int!]!
  rusticity: rusticity!
}

"""
Rusticity type
"""
enum rusticity {
  TRES_RUSTIQUE
  RUSTIQUE
  PEU_RUSTIQUE
}

type AromatConst implements ConstElement {
  id: ID!
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!

  """
  Short description of the constants
  """
  description: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  sickness: [Sickness!]
  varieties: [Variety!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [month!]

  """
  Give an array of months
  """
  recolteMonth: [month!]

  """
  Give an array of months
  """
  semisMonth: [month!]

  """
  Description of the soil needed
  """
  soilDesc: String!
}

type Query {
  me: UserResponse!
  const(id: Int!): ConstElement
  consts(pageNumber: Int!, numberInPage: Int!): [ConstElement!]
}

type UserResponse {
  user: User
}

type User {
  id: ID!
  email: String!
  pseudo: String!
  updateAt: DateTime!
  createdAt: DateTime!
  premium: Boolean!
  admin: Boolean!
  terrains: [Terrain!]
  semis: [Semis!]
  pot: [Pot!]
  posts: [Post!]
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Terrain {
  id: ID!
  height: Float!
  width: Float!
  bgColor: String!
  legumes: [Legume!]
  user: User!
}

type Legume {
  id: ID!
  posX: Float
  posY: Float
  label: String!
  subName: String
  bgColor: String!
  recolteDate: DateTime!
  plantDate: DateTime
  notifs: [Notif!]
  height: Float!
  width: Float!
  image: URL
  terrain: Terrain!
}

type Notif {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  endDate: DateTime!
  done: Boolean!
  notifRappel: [DateTime!]
  legume: Legume!
}

type Semis {
  id: ID!
  label: String!
  column: Int!
  row: Int!
  elements: [SemiElement!]!
  user: User!
}

type SemiElement {
  id: ID!
  label: String!
  recolteDate: DateTime!
  plantDate: DateTime!
  posColumn: Int!
  posRow: Int!
  image: URL!
  semis: Semis!
}

type Pot {
  id: Int!
  name: String!
  user: User!
}

type Post {
  id: Int!
  title: String!
  content: String!
  url: URL
  user: User!
}

type Mutation {
  addLegume(legumeId: Float!, terrainId: Float!, legume: LegumeInput!): Boolean!
  addTerrain(terrain: TerrainInput!): Boolean!
  changePassword(
    newPassword: String!
    oldPassword: String!
  ): ConnectionResponse!
  refreshToken: ConnectionResponse!
  connect(password: String!, emailOrUsername: String!): ConnectionResponse!
  register(
    password: String!
    pseudo: String!
    email: String!
  ): ConnectionResponse!
  addConst(constant: ConstInput!): Boolean!
  removeConst(id: Int!): Boolean!
}

input LegumeInput {
  bgColor: String!
  width: Int!
  height: Int!
  recolteDate: DateTime!
  plantDate: DateTime
}

input TerrainInput {
  width: Float!
  height: Float!
  bgColor: String!
}

type ConnectionResponse {
  token: Token
  error: ErrorType
  user: User
}

type Token {
  access: String!
  refresh: String!
}

type ErrorType {
  label: String!
  message: String!
}

input ConstInput {
  legume: LegumeConstInput
  arbre: ArbreConstInput
  aromat: AromatConstInput
}

input LegumeConstInput {
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!
  description: String!
  cultureDesc: String!
  advices: [String!]!
  plantMonth: [Int!]!
  recolteDesc: String!
  recolteMonth: [Int!]!
  semisMonth: [Int!]!
  soilDesc: String!
  exposition: exposition!
}

input ArbreConstInput {
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!
  description: String!

  """
  Description of the climat needed
  """
  climatDesc: String!

  """
  Description of the culture & entretien needed
  """
  tailleDesc: String!

  """
  Description of the culture & entretien needed
  """
  recolteDesc: String!

  """
  Give an array of months
  """
  tailleMonth: [Int!]!
  rusticity: rusticity!

  """
  Description of the soil needed
  """
  soilDesc: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [Int!]!

  """
  Give an array of months
  """
  recolteMonth: [Int!]!

  """
  Give an array of months
  """
  semisMonth: [Int!]!
}

input AromatConstInput {
  label: String!
  defaultBgColor: String!
  baseHeight: Float!
  baseWidth: Float!
  image: URL!
  description: String!

  """
  Description of the soil needed
  """
  soilDesc: String!

  """
  Conseils sur les légumes
  """
  advices: [String!]
  exposition: exposition!

  """
  Give an array of months
  """
  plantMonth: [Int!]!

  """
  Give an array of months
  """
  recolteMonth: [Int!]!

  """
  Give an array of months
  """
  semisMonth: [Int!]!
}
